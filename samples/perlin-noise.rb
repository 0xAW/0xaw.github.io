#!/bin/ruby
require 'pp'

def fade(t)
  t * t * t * (t * (t * 6 - 15) + 10)
end

def lerp(t, a, b)
  a + t * (b - a)
end

def grad(hash, x, y, z)
  case hash & 15
  when 0, 12
    x + y
  when 1, 14
    y - x
  when 2
    x - y
  when 3
    -x - y
  when 4
    x + z
  when 5
    z - x
  when 6
    x - z
  when 7
    -x - z
  when 8
    y + z
  when 9, 13
    z - y
  when 10
    y - z
  else
    -y - z
  end
end


permutation = [
    151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225,
    140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148,
    247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32,
    57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175,
    74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122,
    60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54,
    65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169,
    200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64,
    52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212,
    207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213,
    119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,
    129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104,
    218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241,
    81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157,
    184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93,
    222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180
]

def noise(x, y, z, p)
  xx = x.to_i.floor & 255
  yy = y.to_i.floor & 255
  zz = z.to_i.floor & 255

  x -= x.floor
  y -= y.floor
  z -= z.floor

  u = fade(x)
  v = fade(y)
  w = fade(z)

  a = p[xx] + yy
  aa = p[a] + zz
  ab = p[a + 1] + zz
  b = p[x + 1] + yy
  ba = p[b] + z
  bb = p[b + 1] + z

  # pp [xx, yy, zz, x, y, z, u, v, w, a, aa, ab, b, ba, bb]
  # puts "===> #{grad(p[ba], x - 1, y, z)}"
  l11 = lerp(u, grad(p[aa], x, y, z), grad(p[ba], x - 1, y, z))
  l12 = lerp(u, grad(p[ab], x, y - 1, z), grad(p[bb], x - 1, y - 1, z))
  l21 = lerp(u, grad(p[aa + 1], x, y, z - 1), grad(p[ba + 1], x - 1, y, z - 1))
  l22 = lerp(u, grad(p[ab + 1], x, y - 1, z - 1), grad(p[bb + 1], x - 1, y - 1, z - 1))

  l1 = lerp(v, l11, l12)
  l2 = lerp(v, l21, l22)

  lerp(w, l1, l2)
end

# puts noise(3.14, 42, 7, permutation)
# Simple command line test.
(1..140).each do |n|
  val = 'a' * (noise(11.123, n, 1, permutation) * 25 + 10)
  puts val
end
